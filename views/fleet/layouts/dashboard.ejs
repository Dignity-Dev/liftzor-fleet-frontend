<div class="container-fluid"></div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="row">
    <div class="col">

        <div class="h-100">
            <div class="row mb-3 pb-1">
                <div class="col-12">
                    <div class="d-flex align-items-lg-center flex-lg-row flex-column">
                        <div class="flex-grow-1">
                            <h4 class="fs-16 mb-1">Welcome Back!</h4>
                            <p class="text-muted mb-0">Here's what's happening with your fleet today.
                            </p>
                        </div>
                        <div class="mt-3 mt-lg-0">
                            <div class="row g-3 mb-0 align-items-center">
                                <div class="col-sm-auto">
                                    <a href="/new-driver" class="btn btn-soft-primary material-shadow-none"><i
                                            class="ri-add-circle-line align-middle me-1"></i>
                                        Add New Driver</a>
                                </div>
                                <!--end col-->
                                <div class="col-auto">
                                    <a href="/new-vehicle" class="btn btn-soft-success material-shadow-none"><i
                                            class="ri-add-circle-line align-middle me-1"></i> Add Vehicle</a>
                                </div>
                                <!--end col-->
                                <div class="col-auto">
                                    <button type="button" class="btn btn-soft-info btn-icon waves-effect material-shadow-none waves-light layout-rightside-btn"><i
                                            class="ri-pulse-line"></i></button>
                                </div>
                                <!--end col-->
                            </div>
                            <!--end row-->
                        </div>
                    </div>
                    <!-- end card header -->
                </div>
                <!--end col-->
            </div>
            <!--end row-->

            <div class="row">
                <div class="col-xl-3 col-md-6">
                    <!-- card -->
                    <div class="card card-animate">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1 overflow-hidden">
                                    <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                                        Vehicles</p>
                                </div>
                                <div class="flex-shrink-0">
                                    <h5 class="text-success fs-14 mb-0">
                                        <i class="ri-arrow-right-up-line fs-13 align-middle"></i> +16.24 %
                                    </h5>
                                </div>
                            </div>
                            <div class="d-flex align-items-end justify-content-between mt-4">
                                <div>
                                    <h4 class="fs-22 fw-semibold ff-secondary mb-4"><span class="counter-value" data-target="<%= dash.vehicleCount %>"></span>
                                    </h4>
                                    <a href="/manage-vehicle" class="text-decoration-underline">View all
                                        vehicles</a>
                                </div>
                                <div class="avatar-sm flex-shrink-0">
                                    <span class="avatar-title bg-success-subtle rounded fs-3">
                                        <i class="ri-takeaway-fill text-success"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <!-- end card body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col -->

                <div class="col-xl-3 col-md-6">
                    <!-- card -->
                    <div class="card card-animate">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1 overflow-hidden">
                                    <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                                        Orders</p>
                                </div>
                                <div class="flex-shrink-0">
                                    <h5 class="text-danger fs-14 mb-0">
                                        <i class="ri-arrow-right-down-line fs-13 align-middle"></i> -3.57 %
                                    </h5>
                                </div>
                            </div>
                            <div class="d-flex align-items-end justify-content-between mt-4">
                                <div>
                                    <h4 class="fs-22 fw-semibold ff-secondary mb-4"><span class="counter-value" data-target="<%= dash.totalOrders %>">0</span></h4>
                                    <a href="manage-order" class="text-decoration-underline">View all
                                        orders</a>
                                </div>
                                <div class="avatar-sm flex-shrink-0">
                                    <span class="avatar-title bg-info-subtle rounded fs-3">
                                        <i class="ri-list-unordered text-info"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <!-- end card body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col -->

                <div class="col-xl-3 col-md-6">
                    <!-- card -->
                    <div class="card card-animate">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1 overflow-hidden">
                                    <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                                        Customers</p>
                                </div>
                                <div class="flex-shrink-0">
                                    <h5 class="text-success fs-14 mb-0">
                                        <i class="ri-arrow-right-up-line fs-13 align-middle"></i> +29.08 %
                                    </h5>
                                </div>
                            </div>
                            <div class="d-flex align-items-end justify-content-between mt-4">
                                <div>
                                    <h4 class="fs-22 fw-semibold ff-secondary mb-4"><span class="counter-value" data-target="<%= dash.customerCount %>">0</span>+
                                    </h4>
                                    <a href="/manage-customer" class="text-decoration-underline">See details</a>
                                </div>
                                <div class="avatar-sm flex-shrink-0">
                                    <span class="avatar-title bg-warning-subtle rounded fs-3">
                                        <i class="bx bx-user-circle text-warning"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <!-- end card body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col -->

                <div class="col-xl-3 col-md-6">
                    <!-- card -->
                    <div class="card card-animate">
                        <div class="card-body">
                            <div class="d-flex align-items-center">
                                <div class="flex-grow-1 overflow-hidden">
                                    <p class="text-uppercase fw-medium text-muted text-truncate mb-0">
                                        Drivers</p>
                                </div>
                                <div class="flex-shrink-0">
                                    <h5 class="text-muted fs-14 mb-0">
                                        +0.00 %
                                    </h5>
                                </div>
                            </div>
                            <div class="d-flex align-items-end justify-content-between mt-4">
                                <div>
                                    <h4 class="fs-22 fw-semibold ff-secondary mb-4"><span class="counter-value" data-target="<%= dash.driverCount %>">0</span>
                                    </h4>
                                    <a href="/manage-driver" class="text-decoration-underline">All Drivers</a>
                                </div>
                                <div class="avatar-sm flex-shrink-0">
                                    <span class="avatar-title bg-primary-subtle rounded fs-3">
                                        <i class="ri-contacts-line text-primary"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <!-- end card body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col -->
            </div>
            <!-- end row-->

            <div class="row">
                <div class="col-xl-12">
                    <div class="card">
                        <div class="card-header border-0 align-items-center d-flex">
                            <h4 class="card-title mb-0 flex-grow-1">Orders/Sales Report </h4>
                        </div>

                        <div class="card-body p-0 pb-2">
                            <div class="d-flex align-items-end justify-content-between px-3 ">
                                <div class="btn-group" role="group" aria-label="Date Filter">
                                    <button type="button" class="btn btn-primary active" id="12months-btn" onclick="loadChart(365)">Last 12 Months</button>
                                    <button type="button" class="btn btn-primary" onclick="loadChart(180)">Last 6 Months</button>
                                    <button type="button" class="btn btn-primary" onclick="loadChart(30)">Last 30 Days</button>
                                    <button type="button" class="btn btn-primary" onclick="loadChart(7)">Last 7 Days</button>
                                </div>
                                <div class=""> <button type="button" class="btn btn-success" id="exportCsv">Export to CSV</button></div>

                            </div>

                            <div class="w-100 p-2">
                                <canvas id="ordersChart" width="400" height="150"></canvas>
                            </div>
                        </div>
                        <!-- end card body -->
                    </div>
                    <!-- end card -->
                </div>
                <!-- end col -->

            </div>


        </div>
        <!-- end .h-100-->

    </div>
    <!-- end col -->

</div>






</div>

<script>
    let chart;
    const ctx = document.getElementById('ordersChart').getContext('2d');
    const orders = <%- JSON.stringify(orders) %>;

    // Initial chart load with 12 months (365 days)
    loadChart(365);

    // Load the chart based on the selected period (days)
    function loadChart(days) {
        const completedOrders = filterCompletedOrders(orders);
        const filteredOrders = filterOrdersByDateRange(completedOrders, days);
        const groupedOrders = groupOrdersByPeriod(filteredOrders, days);

        const labels = Object.keys(groupedOrders); // X-axis labels (days or months)
        const dataAmount = Object.values(groupedOrders).map(order => order.amount); // Y-axis (order amounts)

        if (chart) chart.destroy();

        chart = new Chart(ctx, {
            type: 'line', // Changed to 'line' chart
            data: {
                labels: labels,
                datasets: [{
                    label: 'Successful Orders Amount',
                    data: dataAmount,
                    borderColor: 'rgba(75, 192, 192, 1)', // Line color
                    borderWidth: 2, // Width of the line
                    fill: false // Remove background color under the line
                }]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: days === 7 ? 'Days of the Week' : 'Months'
                        }
                    },
                    y: {
                        beginAtZero: true,
                        title: {
                            display: true,
                            text: 'Amount'
                        }
                    }
                }
            }
        });
    }

    // Filter orders by completion status
    function filterCompletedOrders(orders) {
        return orders.filter(order => order.status === 'completed');
    }

    // Group orders by the period (days or months)
    function groupOrdersByPeriod(orders, days) {
        if (days === 7) {
            return groupOrdersByDayOfWeek(orders); // Group by day of the week for 7 days
        } else {
            return groupOrdersByMonth(orders); // Group by month for 6 and 12 months
        }
    }

    // Group by day of the week
    function groupOrdersByDayOfWeek(orders) {
        const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        const grouped = {};
        daysOfWeek.forEach(day => grouped[day] = {
            amount: 0
        });

        orders.forEach(order => {
            const date = new Date(order.createdAt);
            const dayOfWeek = daysOfWeek[date.getDay()];
            grouped[dayOfWeek].amount += order.price;
        });

        return grouped;
    }

    // Group by month
    function groupOrdersByMonth(orders) {
        const monthsOfYear = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
        const grouped = {};
        monthsOfYear.forEach(month => grouped[month] = {
            amount: 0
        });

        orders.forEach(order => {
            const date = new Date(order.createdAt);
            const month = monthsOfYear[date.getMonth()];
            grouped[month].amount += order.price;
        });

        return grouped;
    }

    // Filter orders by date range (last X days)
    function filterOrdersByDateRange(orders, days) {
        const now = new Date();
        return orders.filter(order => {
            const orderDate = new Date(order.createdAt);
            const diffTime = now - orderDate;
            const diffDays = diffTime / (1000 * 60 * 60 * 24); // Convert milliseconds to days
            return diffDays <= days;
        });
    }

    // Button click events to filter by different ranges
    document.querySelectorAll('.filter-button').forEach(button => {
        button.addEventListener('click', function() {
            const days = parseInt(this.getAttribute('data-days'));
            loadChart(days); // Reload chart with the selected date range
        });
    });


    // Export filtered data to CSV
    document.getElementById('exportCsv').addEventListener('click', () => {
        const completedOrders = filterCompletedOrders(orders);
        const csvContent = convertOrdersToCSV(completedOrders);
        downloadCSV(csvContent, 'orders_data.csv');
    });

    // Convert order data to CSV format
    function convertOrdersToCSV(orders) {
        const header = ['Order ID', 'Created At', 'Price', 'Status'];
        const rows = orders.map(order => [
            order.orderID,
            new Date(order.createdAt).toISOString().split('T')[0],
            order.price,
            order.status
        ]);

        const csvContent = [header, ...rows].map(e => e.join(',')).join('\n');
        return csvContent;
    }

    // Download CSV file
    function downloadCSV(content, fileName) {
        const blob = new Blob([content], {
            type: 'text/csv;charset=utf-8;'
        });
        const link = document.createElement('a');
        link.href = URL.createObjectURL(blob);
        link.setAttribute('download', fileName);
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }
</script>
